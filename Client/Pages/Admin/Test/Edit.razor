@page "/admin/test/edit/{CourseId:int}/{Id:int}"
@inject NavigationManager _navigation

<div>
    <EditForm Model="Model" OnSubmit="() => Submit()">
        <div class="form-control">
            <label>Вопрос</label>
            <input class="form-control" @bind-value="Model.Question" />
        </div>
        <div class="form-control">
            <label>Ответ 1</label>
            <input class="form-control" @bind-value="Model.Answer1" />
        </div>
        <div class="form-control">
            <label>Ответ 2</label>
            <input class="form-control" @bind-value="Model.Answer2" />
        </div>
        <div class="form-control">
            <label>Ответ 3</label>
            <input class="form-control" @bind-value="Model.Answer3" />
        </div>
        <div class="form-control">
            <label>Ответ 4</label>
            <input class="form-control" @bind-value="Model.Answer4" />
        </div>
        <div class="form-control">
            <label>Правильный ответ</label>
            <input class="form-control" @bind-value="Model.CorrectAnswer" />
        </div>
        <br />
        <button type="submit" class="btn btn-info">Изменить</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public int CourseId { get; set; }

    [Parameter]
    public int Id { get; set; }

    [Inject]
    ITestRepository _testRepository { get; set; }

    TestDto Model { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Model = await _testRepository.GetTestById(CourseId, Id);
    }

    void Submit()
    {
        _testRepository.Update(Model);

        _navigation.NavigateTo($"/admin/test/{CourseId}");
    }
}
