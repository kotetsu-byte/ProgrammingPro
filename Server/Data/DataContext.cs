using Microsoft.EntityFrameworkCore;
using ProgrammingPro.Server.Models;
using System.ComponentModel;

namespace ProgrammingPro.Server.Data
{
    public class DataContext : DbContext
    {
        public DataContext(DbContextOptions<DataContext> options) : base(options)
        {
            
        }

        public DbSet<Course> Courses { get; set; }
        public DbSet<Lesson> Lessons { get; set; }
        public DbSet<Test> Tests { get; set; }
        public DbSet<Doc> Docs { get; set; }
        public DbSet<Video> Videos { get; set; }
        public DbSet<Homework> Homeworks { get; set; }
        public DbSet<Material> Materials { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UserCourse> UserCourses { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            base.OnModelCreating(modelBuilder);

            modelBuilder.Entity<Lesson>()
                .HasOne(c => c.Course)
                .WithMany(l => l.Lessons)
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder.Entity<Test>()
                .HasOne(c => c.Course)
                .WithMany(t => t.Tests)
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder.Entity<Doc>()
                .HasOne(l => l.Lesson)
                .WithMany(d => d.Docs)
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder.Entity<Video>()
                .HasOne(l => l.Lesson)
                .WithMany(v => v.Videos)
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder.Entity<Homework>()
                .HasOne(l => l.Lesson)
                .WithMany(h => h.Homeworks)
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder.Entity<Material>()
                .HasOne(h => h.Homework)
                .WithOne(m => m.Materials)
                .OnDelete(DeleteBehavior.Cascade);

            modelBuilder.Entity<UserCourse>()
                .HasKey(uc => new { uc.UserId, uc.CourseId });
            modelBuilder.Entity<UserCourse>()
                .HasOne(c => c.Course)
                .WithMany(uc => uc.UserCourses)
                .HasForeignKey(u => u.UserId);
            modelBuilder.Entity<UserCourse>()
                .HasOne(u => u.User)
                .WithMany(uc => uc.UserCourses)
                .HasForeignKey(c => c.CourseId);


            modelBuilder.Entity<Course>()
                .HasData(
                    new Course 
                    { 
                        Id = 1,
                        Name = "C++",
                        Description = "C++ был разработан Бьёрном Страуструпом в подразделении Bell Labs компании AT&T в качестве дополнения к языку Cи. С++ добавил множество новых возможностей в язык Си. Его популярность была вызвана объектно-ориентированностью языка. Сейчас C++ широко используется для разработки программного обеспечения, являясь одним из самых популярных языков программирования. С его помощью создают операционные системы, разнообразные прикладные программы, драйверы устройств, игры и пр.",
                        ImgName = ""
                    },
                    new Course
                    {
                        Id = 2,
                        Name = "C#",
                        Description = "C# — объектно-ориентированный язык программирования общего назначения. Разработан в 1998—2001 годах группой инженеров компании Microsoft под руководством Андерса Хейлсберга и Скотта Вильтаумота как язык разработки приложений для платформы Microsoft .NET Framework и .NET Core",
                        ImgName = ""
                    },
                    new Course
                    {
                        Id = 3,
                        Name = "Java",
                        Description = "Java — строго типизированный объектно-ориентированный язык программирования общего назначения, разработанный компанией Sun Microsystems (в последующем приобретённой компанией Oracle). Разработка ведётся сообществом, организованным через Java Community Process; язык и основные реализующие его технологии распространяются по лицензии GPL. Права на торговую марку принадлежат корпорации Oracle.",
                        ImgName = ""
                    },
                    new Course
                    {
                        Id = 4,
                        Name = "Python",
                        Description = "Python — высокоуровневый язык программирования общего назначения с динамической строгой типизацией и автоматическим управлением памятью, ориентированный на повышение производительности разработчика, читаемости кода и его качества, а также на обеспечение переносимости написанных на нём программ. Язык является полностью объектно-ориентированным в том плане, что всё является объектами.",
                        ImgName = ""
                    },
                    new Course
                    {
                        Id = 5,
                        Name = "Ruby",
                        Description = "Ruby — динамический, рефлективный, интерпретируемый высокоуровневый язык программирования. Язык обладает независимой от операционной системы реализацией многопоточности, сильной динамической типизацией, сборщиком мусора и многими другими возможностями. По особенностям синтаксиса он близок к языкам Perl и Eiffel, по объектно-ориентированному подходу — к Smalltalk.",
                        ImgName = ""
                    },
                    new Course
                    {
                        Id = 6,
                        Name = "PHP",
                        Description = "PHP — скриптовый язык общего назначения, интенсивно применяемый для разработки веб-приложений. В настоящее время поддерживается подавляющим большинством хостинг-провайдеров и является одним из лидеров среди языков, применяющихся для создания динамических веб-сайтов.",
                        ImgName = ""
                    }
                );

            modelBuilder.Entity<Lesson>()
                .HasData(
                    // C++
                    new Lesson
                    { 
                        Id = 1,
                        CourseId = 1,
                        Title = "Переменные",
                        Text = "Прежде чем мы продолжим знакомство с переменными в C++, давайте узнаем, значениями какого типа мы можем заполнять созданные нами переменные.\r\n\r\nВот список стандартных типов данных:\r\n\r\nint - это целый тип, который может хранить в себе только целые числа.\r\nfloat - данный тип является неточным. Он позволяет хранить не только целую часть, но, в отличии от типа int, и дробную.\r\ndouble - данный тип нечем не отличается от float, кроме более высокой точности (позволяет хранить больше чисел после запятой).\r\nchar - в данный тип данных можно записывать отдельные символы (абсолютно любые).\r\nbool - хранит в себе значения логического типа: “правду” - true, либо “ложь” - false. О данном типе мы подробно поговорим в уроке о логических выражениях.\r\nТеперь когда мы вооружились знаниями о возможных типах данных, можем переходить непосредственно к созданию переменных на языке C++!",
                    },
                    new Lesson
                    {
                        Id = 2,
                        CourseId = 1,
                        Title = "Математические операции",
                        Text = "Заголовочный файл <cmath> стандартной библиотеки C++ определяет набор математических функций. которые можно использовать в программах. Перечислю наиболее распространенные:\r\n\r\nabs(arg): вычисляет абсолютное значение arg. В отличие от большинства функций , abs() возвращает целочисленный тип, если arg является целым числом.\r\n\r\nceil(arg): вычисляет ближайшее целое число, большее или равное arg, и возвращает его в виде числа с плавающей точкой. Например, выражение std::ceil(2.5) возвращает 3.0, а std::ceil(-2.5) - -2.0. (дробная часть округляется до единицы)\r\n\r\nfloor(arg): вычисляет ближайшее целое число, меньшее или равное arg, и возвращает его в виде числа с плавающей точкой. Например, выражение std::floor(2.5) возвращает 2.0, а std::floor(-2.5) - число -3.0. (дробная часть округляется до нуля)\r\n\r\nexp(arg): вычисляет выражение earg.\r\n\r\nlog(arg): вычисляет натуральный логарифм (по основанию e) числа arg.\r\n\r\nlog10(arg): вычисляет логарифм по основанию 10 от arg.\r\n\r\npow(arg1, arg2): вычисляет значение arg1, возведенное в степень arg2, то есть arg1arg2. Числа arg1 и arg2 могут быть целочисленными или с плавающей запятой. Так, результат std::pow(2, 3) равен 8.0, а std::pow(4, 0,5) равно 2,0.\r\n\r\nsqrt(arg): вычисляет квадратный корень из arg.\r\n\r\nround(arg), lround (arg) и llround (arg) округляют число до ближайщего целого. Разница между ними состоит в типа возвращаемого результата: round() возвращает число с плавающей точкой, lround (arg) - число long, а llround (arg) - long long.\r\n\r\nПоловинные значения округляются до нуля: std::lround(0.5) возвращает 1L, тогда как std::round(-1.5f) возвращает -2.0f.\r\n\r\nsin(arg): вычисляет синус угла, при этом arg представляет значение в радианах.\r\n\r\ncod(arg): вычисляет косинус угла.\r\n\r\ntan(arg): вычисляет тангенс угла.\r\n\r\nisinf(arg): возвращает true, если аргумент представляет +-бесконечность.\r\n\r\nisnan(arg): возвращает true, если аргумент представляет NaN."
                    },
                    new Lesson
                    {
                        Id = 3,
                        CourseId = 1,
                        Title = "Логические операции",
                        Text = "В языке программирования C++ есть следующие операции сравнения:\r\n\r\n==\r\n\r\nОперация \"равно\". Возвращает true, если оба операнда равны, и false, если они не равны. >\r\n\r\nОперация \"больше чем\". Возвращает true, если первый операнд больше второго, и false, если первый операнд меньше второго. <\r\n\r\nОперация \"меньше чем\". Возвращает true, если первый операнд меньше второго, и false, если первый операнд больше второго. <=\r\n\r\nОперация \"меньше или равно\". Возвращает true, если первый операнд меньше или равен второму, и false, если первый операнд больше второго. >=\r\n\r\nОперация \"больше или равно\". Возвращает true, если первый операнд больше или равен второму, и false, если первый операнд меньше второго. !=\r\n\r\nОперация \"не равно\". Возвращает true, если первый операнд не равен второму, и false, если оба операнда равны."
                    },
                    new Lesson
                    {
                        Id = 4,
                        CourseId = 1,
                        Title = "Массивы",
                        Text = "В объявлении массива C++ размер массива указывается после имени переменной, а не после имени типа, как в других языках. В следующем примере объявляется массив из 1000 двойных размеров, выделенных в стеке. Число элементов должно быть предоставлено в виде целочисленного литерала или в качестве константного выражения. Это связано с тем, что компилятор должен знать, сколько пространства стека следует выделить; он не может использовать значение, вычисляемое во время выполнения. Каждому элементу в массиве присваивается значение по умолчанию 0. Если вы не назначаете значение по умолчанию, каждый элемент изначально содержит все случайные значения в этом расположении памяти."
                    },
                    new Lesson
                    {
                        Id = 5,
                        CourseId = 1,
                        Title = "Функции",
                        Text = "Функции — это блоки кода, выполняющие определенные операции. Если требуется, функция может определять входные параметры, позволяющие вызывающим объектам передавать ей аргументы. При необходимости функция также может возвращать значение как выходное. Функции полезны для инкапсуляции основных операций в едином блоке, который может многократно использоваться. В идеальном случае имя этого блока должно четко описывать назначение функции. Следующая функция принимает два целых числа из вызывающего средства и возвращает их сумму; a и b — это параметры типа int. Функция может вызываться или вызываться из любого количества мест в программе. Значения, передаваемые функции, являются аргументами, типы которых должны быть совместимы с типами параметров в определении функции."
                    },
                    new Lesson
                    {
                        Id = 6,
                        CourseId = 1,
                        Title = "Объекты",
                        Text = "Объект в C++ — это структура данных, которая является экземпляром класса.\r\n\r\nКогда класс определяется, память не выделяется, но при создании экземпляра (объявлении объекта) память выделяется для хранения данных и выполнения необходимых функций.\r\n\r\nОбъекты позволяют манипулировать данными внутри класса."
                    },
                    // C#
                    new Lesson
                    {
                        Id = 7,
                        CourseId = 2,
                        Title = "Переменные",
                        Text = "Для хранения данных в программе применяются переменные. Переменная представляет именнованную область памяти, в которой хранится значение определенного типа. Переменная имеет тип, имя и значение. Тип определяет, какого рода информацию может хранить переменная.\r\n\r\nПеред использованием любую переменную надо определить. Вначале идет тип переменной, потом ее имя. В качестве имени переменной может выступать любое произвольное название, которое удовлетворяет следующим требованиям:\r\n\r\nимя может содержать любые цифры, буквы и символ подчеркивания, при этом первый символ в имени должен быть буквой или символом подчеркивания\r\n\r\nв имени не должно быть знаков пунктуации и пробелов\r\n\r\nимя не может быть ключевым словом языка C#. Таких слов не так много, и при работе в Visual Studio среда разработки подсвечивает ключевые слова синим цветом.\r\n\r\nХотя имя переменой может быть любым, но следует давать переменным описательные имена, которые будут говорить об их предназначении."
                    },
                    new Lesson
                    {
                        Id = 8,
                        CourseId = 2,
                        Title = "Математические операции",
                        Text = "Следующие операторы выполняют арифметические операции с операндами числовых типов:\r\n\r\nунарные — ++ (приращение), -- (уменьшение), + (плюс) и - (минус);\r\nбинарные — * (умножение), / (деление), % (остаток от деления), + (сложение) и - (вычитание).\r\nЭти операторы поддерживаются всеми целочисленными типами и типами с плавающей запятой.\r\n\r\nВ случае целочисленных типов эти операторы (за исключением операторов ++ и --) определяются для типов int, uint, longи ulong. Если операнды принадлежат к другим целочисленным типам (sbyte, byte, short, ushort или char), их значения преобразуются в тип int, который также является типом результата операции. Если операнды принадлежат к разным целочисленным типам или типам с плавающей запятой, их значения преобразуются в ближайший содержащий тип, если такой тип существует. Дополнительные сведения см. в разделе Числовые повышения уровня в статье Спецификации языка C#. Операторы ++ и -- определяются для всех целочисленных числовых типов и числовых типов с плавающей запятой, а также типа char. Тип результата выражения сложного назначения является типом левого операнда."
                    },
                    new Lesson
                    {
                        Id = 9,
                        CourseId = 2,
                        Title = "Логические операции",
                        Text = "Логические логические операторы выполняют логические операции с логическими операндами. Операторы включают унарное логическое отрицание (!), двоичное логическое И (), OR (&|) и монопольное ИЛИ (^), а также двоичный условный логический и () и OR (&&||).\r\n\r\nУнарный ! (логическое отрицание) оператор.\r\nБинарные & (логическое И), | (логическое ИЛИ), а также ^ (логическое исключающее ИЛИ) операторы. Эти операторы всегда обрабатывают оба операнда.\r\nБинарные && (условное логическое И) и || (условное логическое ИЛИ) операторы. Эти операторы вычисляют правый операнд, только если это необходимо.\r\nДля операндов целочисленных типов операторы &, | и ^ выполняют побитовые логические операции. Дополнительные сведения см. в разделе Побитовые операторы и операторы сдвига."
                    },
                    new Lesson
                    {
                        Id = 10,
                        CourseId = 2,
                        Title = "Массивы",
                        Text = "Массив имеет следующие свойства:\r\n\r\nМассив может быть одномерным, многомерным или многомерным.\r\nЧисло измерений задается при объявлении переменной массива. Длина каждого измерения устанавливается при создании экземпляра массива. Эти значения нельзя изменить во время существования экземпляра.\r\nМассив массивов является массивом массивов, и каждый массив элементов имеет значение nullпо умолчанию.\r\nМассивы индексируются от нуля: массив с n элементами индексируется от 0 до n-1.\r\nЭлементы массива могут иметь любой тип, в том числе тип массива.\r\nТипы массивов — это ссылочные типы, производные от абстрактного базового типа Array. Все массивы реализуют IList и IEnumerable. Для итерации по массиву можно использовать оператор foreach. Одномерные массивы также реализуют IList<T> и IEnumerable<T>."
                    },
                    new Lesson
                    {
                        Id = 11,
                        CourseId = 2,
                        Title = "Функции",
                        Text = "Функции — это специальные блоки кода, которые можно вызывать из других частей программы. Это дает возможность повторно использовать уже написанный код, а также более организовано структурировать программу.\r\nДля вызова функции в C# необходимо использовать ее имя, после которого следуют скобки. В скобках указываются аргументы функции, если они есть. Например: public int Add (int x, int y) {return x + y;} public void Main () {int result = Add (2, 3);}."
                    },
                    new Lesson
                    {
                        Id = 12,
                        CourseId = 2,
                        Title = "Объекты",
                        Text = "Объект в языке C# — это реализация класса в виде некоторой сущности.\r\n\r\nАналог класса в реальной жизни — это чертёж здания или автомобиля, то есть некоторый шаблон.\r\n\r\nВыделяют три основных принципа объектно-ориентированного программирования (ООП):\r\n\r\nИнкапсуляция. Предполагает сокрытие деталей реализации и связывание данных и методов для их обработки в одном месте.\r\n\r\nНаследование. Один класс может наследовать функции и данные другого класса.\r\n\r\nПолиморфизм. Возможность обработки данных разных типов одной и той же функцией."
                    },
                    // Java
                    new Lesson
                    {
                        Id = 13,
                        CourseId = 3,
                        Title = "Переменные",
                        Text = "Переменная в Java — это контейнер,  в котором может храниться некоторое значение данных для дальнейшего использования в программе. По сути переменная — это минимальная неделимая единица Java-приложения.\r\n\r\nПеременные в Java бывают двух видов: предназначенные для для маленьких данных (примитивные переменные) и для более сложных, тяжёлых (ссылочные переменные).\r\n\r\nСегодня мы рассмотрим первый случай, когда переменные хранят именно само значение данных. Такие переменные называют примитивными."
                    },
                    new Lesson
                    {
                        Id = 14,
                        CourseId = 3,
                        Title = "Математические операции",
                        Text = "У оператора деления — своя специфика. Например, результатом выражения 10 / 3 будет тройка. Почему так? Когда оператор применяется к целым числам, остаток от деления отбрасывается, чтобы результатом тоже было целое число. Получить остаток от деления позволяет другой оператор — %. Например, остатком от деления 10 на 3 будет единица. Её и вернёт оператор %.\r\nМинус в Java тоже имеет двойной смысл: когда этот оператор применяют к двум операндам, минус называют бинарным. В этом случае речь идёт о вычитании. Например, 10 - 3 = 7. Когда же минус относится только к одному операнду, его называют унарным — он указывает, что значение операнда будет отрицательным: x = -1.\r\n\r\nБольшую часть математических операций в Java разработчики выполняют с помощью библиотек. Они содержат готовые функции для вычисления синусов, косинусов, возведения в степень и более сложных арифметических действий."
                    },
                    new Lesson
                    {
                        Id = 15,
                        CourseId = 3,
                        Title = "Логические операции",
                        Text = "В Java доступны следующие логические операции: \r\nЛогическое отрицание, оно же NOT или инверсия. В Java обозначается символом “!” перед операндом. Применяется к одному операнду.\r\nЛогическое и, оно же AND или конъюнкция. Обозначается символом “&” между двумя операндами, к которым применяется.\r\nЛогическое или в Java, оно же — OR, оно же — дизъюнкция. В Java обозначается символом “|” между двумя операндами.\r\nИсключающее или, XOR, строгая дизъюнкция. В Java обозначается символом “^” между двумя операндами.\r\nВ Java к логическим операторам можно отнести условное или, обозначаемое как ||, а также условное и — &&."
                    },
                    new Lesson
                    {
                        Id = 16,
                        CourseId = 3,
                        Title = "Массивы",
                        Text = "Массив — это структура данных, в которой хранятся элементы одного типа. Его можно представить, как набор пронумерованных ячеек, в каждую из которых можно поместить какие-то данные (один элемент данных в одну ячейку). Доступ к конкретной ячейке осуществляется через её номер. Номер элемента в массиве также называют индексом. \r\n\r\nВ случае с Java массив однороден, то есть во всех его ячейках будут храниться элементы одного типа. Так, массив целых чисел содержит только целые числа (например, типа int), массив строк — только строки, массив из элементов созданного нами класса Dog будет содержать только объекты Dog. То есть в Java мы не можем поместить в первую ячейку массива целое число, во вторую String, а в третью — “собаку”. "
                    },
                    new Lesson
                    {
                        Id = 17,
                        CourseId = 3,
                        Title = "Функции",
                        Text = "Функция в Java — это набор инструкций, который может быть вызван по имени.\r\n\r\nФункции могут принимать параметры (аргументы) и возвращать результат. В Java функции называются методами и объявляются внутри классов.\r\n\r\nДля создания функции в Java следует выполнить следующие шаги:\r\n\r\nОпределить имя функции.\r\n\r\nОпределить тип возвращаемого значения.\r\n\r\nОпределить параметры (если есть).\r\n\r\nНаписать тело функции.\r\n\r\nНазвания функций должны быть говорящими и отражать их назначение. Старайтесь делать функции небольшими и выполняющими одну конкретную задачу. Используйте параметры для передачи данных в функцию и возвращаемые значения для получения результатов."
                    },
                    new Lesson
                    {
                        Id = 18,
                        CourseId = 3,
                        Title = "Объекты",
                        Text = "Объект – это конкретный экземпляр класса. Объекты создаются с использованием оператора new и инициализируются с помощью конструктора класса. Вот пример создания объекта типа Person: Person person1 = new Person (); person1.name = \"Анна\"; person1.age = 30; person1.sayHello (); // Вывод: Привет, меня зовут Анна и мне 30 лет! Каждый объект имеет свои собственные значения полей, независимые от других объектов того же класса."
                    },
                    // Python
                    new Lesson
                    {
                        Id = 19,
                        CourseId = 4,
                        Title = "Переменные",
                        Text = "Переменная — это область памяти компьютера, у которой есть имя. Структурно она состоит из трёх частей:\r\n\r\nИмя, или идентификатор, — это название, придуманное программистом, чтобы обращаться к переменной. В примерах выше это x, name и coin_flipping_result.\r\nЗначение — это информация, которая хранится в памяти компьютера и с которой работает программа. В примерах выше это 4, 'Виктория' и ['орёл', 'решка', 'решка', 'орёл']. Они всегда принадлежат к какому-либо типу данных.\r\nАдрес — это номер ячейки памяти, в которой хранится значение переменной.\r\nПриведём наглядную аналогию. Представьте большой производственный склад, заполненный стеллажами, на которых стоят коробки. Склад — это общая память компьютера. Допустим, на третьем стеллаже, на второй полке, в шестой ячейке стоит какая-нибудь коробка. Если в неё что-нибудь положить и наклеить этикетку с названием — коробка будет переменной. То, что в ней лежит, — это её значение. Третий стеллаж, вторая полка, пятая ячейка — её адрес, а этикетка — её имя."
                    },
                    new Lesson
                    {
                        Id = 20,
                        CourseId = 4,
                        Title = "Математические операции",
                        Text = "Язык Python, благодаря наличию огромного количества библиотек для решения разного рода вычислительных задач, сегодня является конкурентом таким пакетам как Matlab и Octave. Запущенный в интерактивном режиме, он, фактически, превращается в мощный калькулятор. В этом уроке речь пойдет об арифметических операциях, доступных в данном языке.\r\n\r\nАрифметические операции будем изучать применительно к числам, причем работу с комплексными числами разберем отдельно. Также, кратко остановимся на битовых операциях, представлении чисел в разных системах исчисления и коснемся библиотеки math.\r\n\r\nКак было сказано в предыдущем уроке, посвященном типами и модели данных Python, в этом языке существует три встроенных числовых типа данных:\r\n\r\nцелые числа (int);\r\nвещественные числа (float);\r\nкомплексные числа (complex).\r\nЕсли в качестве операндов некоторого арифметического выражения используются только целые числа, то результат тоже будет целое число. Исключением является операция деления, результатом которой является вещественное число. При совместном использовании целочисленных и вещественных переменных, результат будет вещественным."
                    },
                    new Lesson
                    {
                        Id = 21,
                        CourseId = 4,
                        Title = "Логические операции",
                        Text = "Простейшие условные выражения представляют операции сравнения, которые сравнивают два значения. Python поддерживает следующие операции сравнения:\r\n\r\n==\r\n\r\nВозвращает True, если оба операнда равны. Иначе возвращает False.\r\n\r\n!=\r\n\r\nВозвращает True, если оба операнда НЕ равны. Иначе возвращает False.\r\n\r\n> (больше чем)\r\n\r\nВозвращает True, если первый операнд больше второго.\r\n\r\n< (меньше чем)\r\n\r\nВозвращает True, если первый операнд меньше второго.\r\n\r\n>= (больше или равно)\r\n\r\nВозвращает True, если первый операнд больше или равен второму.\r\n\r\n<= (меньше или равно)\r\n\r\nВозвращает True, если первый операнд меньше или равен второму."
                    },
                    new Lesson
                    {
                        Id = 22,
                        CourseId = 4,
                        Title = "Массивы",
                        Text = "В языке Python как таковых массивов нет. Вместо этого для хранения группы однотипных (но и не только однотипных) объектов используют списки - объекты типа list. Отличие списков от массивов заключается в том, что список - это динамическая структура, размер которого можно изменять во время выполнения программы (удалять, добавлять элементы) не задумываясь над операциями по управлению памятью (это делает транслятор).\r\nВ дальнейшем, разбирая работу со списками, будем использовать слово \"массив\", так как чаще всего списки используются именно в роли массива (хранят однотипные данные)."
                    },
                    new Lesson
                    {
                        Id = 23,
                        CourseId = 4,
                        Title = "Функции",
                        Text = "Функция в программировании представляет собой обособленный участок кода, который можно вызывать, обратившись к нему по имени, которым он был назван. При вызове происходит выполнение команд тела функции.\r\n\r\nФункции можно сравнить с небольшими программками, которые сами по себе, то есть автономно, не исполняются, а встраиваются в обычную программу. Нередко их так и называют - подпрограммы. Других ключевых отличий функций от программ нет. Функции также при необходимости могут получать и возвращать данные. Только обычно они их получают не с ввода, а из вызывающей программы. Сюда же они возвращают результат свой работы.\r\n\r\nСуществует множество встроенных в язык программирования функций. С некоторыми такими в Python вы уже сталкивались. Это print(), input(), int(), float(), str(), type(). Код их тела нам не виден, он где-то \"спрятан внутри языка\". Нам же предоставляется только интерфейс - имя функции.\r\n\r\nС другой стороны, программист может определять свои функции. Их называют пользовательскими. В данном случае под \"пользователем\" понимают программиста, а не того, кто использует программу."
                    },
                    new Lesson
                    {
                        Id = 24,
                        CourseId = 4,
                        Title = "Объекты",
                        Text = "Объект — это экземпляр класса. Класс можно сравнить с чертежом, по которому создаются объекты.\r\nPython соответствует принципам объектно-ориентированного программирования. В python всё является объектами - и строки, и списки, и словари, и всё остальное.\r\nНо возможности ООП в python этим не ограничены. Программист может написать свой тип данных (класс), определить в нём свои методы."
                    },
                    // Ruby
                    new Lesson
                    {
                        Id = 25,
                        CourseId = 5,
                        Title = "Переменные",
                        Text = "В Ruby есть четыре типа переменных:\r\n\r\nЛокальные переменные. Определяются в методе или блоке и доступны только внутри этого метода или блока.\r\n\r\nInstance-переменные. Связаны с конкретным экземпляром класса и доступны из любого метода внутри этого экземпляра.\r\n\r\nClass-переменные. Связаны с конкретным классом и доступны для всех экземпляров этого класса.\r\n\r\nGlobal-переменные. Доступны из любого места в программе Ruby.\r\n\r\nДля объявления переменных используется строчная буква или подчеркивание, за которыми следует комбинация букв, цифр или подчеркиваний. Для присвоения значений переменным используется оператор присваивания (=)."
                    },
                    new Lesson
                    {
                        Id = 26,
                        CourseId = 5,
                        Title = "Математические операции",
                        Text = "Ruby поддерживает богатый набор операторов, как и следовало ожидать от современного языка. Большинство операторов — это фактически вызовы методов. Например, a + b интерпретируется как. + (B), где метод + в объекте, на который ссылается переменная a, вызывается с аргументом b .\r\n\r\nДля каждого оператора (+ — * /% ** & | ^ << >> && ||) существует соответствующая форма оператора сокращенного присваивания (+ = — = и т. д.)."
                    },
                    new Lesson
                    {
                        Id = 27,
                        CourseId = 5,
                        Title = "Логические операции",
                        Text = "Логический тип в Ruby представлен привычными значениями true и false, а также набором операторов:\r\n\r\n&& (и),\r\n\r\n== (равно),\r\n\r\n|| (или),\r\n\r\n! (не).\r\n\r\nВ отличие от многих других языков сравнение с логическим значением в Ruby строгое, то есть true и false равны только самим себе.\r\n\r\nВ Ruby только nil и false рассматриваются как falsey, все остальные значения в логических выражениях приводятся к true."
                    },
                    new Lesson
                    {
                        Id = 28,
                        CourseId = 5,
                        Title = "Массивы",
                        Text = "Массив — упорядоченная коллекция произвольных объектов с целочисленной индексацией. Нумерация элементов массива начинается с 0, как в языках Си или Java. Отрицательный индекс предполагает отсчет с конца массива, то есть индексу -1 соответствует последний элемент массива, -2 — предпоследний, и так далее."
                    },
                    new Lesson
                    {
                        Id = 29,
                        CourseId = 5,
                        Title = "Функции",
                        Text = "В Ruby функциональное программирование поддерживается благодаря конструкции языка, которая включает выражения, блоки и возможность строить объекты с любым поведением.\r\n\r\nОсновные принципы функционального программирования:\r\n\r\nПрограмма в функциональном стиле — это сложное выражение, в котором функции применяют функции.\r\n\r\nФункции должны быть чистыми: код должен быть построен так, чтобы функция, применённая к одним и тем же аргументам, возвращала одно и то же значение.\r\n\r\nПеременные, объекты и состояния не изменяются. Функция может сконструировать и вернуть новый объект, но не станет изменять переданные ей аргументы."
                    },
                    new Lesson
                    {
                        Id = 30,
                        CourseId = 5,
                        Title = "Объекты",
                        Text = "В Ruby есть много разных видов объектов, например:\r\n\r\nстроки (String),\r\n\r\nцелые числа (Fixnum),\r\n\r\nмассивы (Array).\r\n\r\nУ каждого из этих объектов есть свой тип, который называется классом.\r\n\r\nКласс — это описание типа объектов, которые можно создавать.\r\n\r\nКонкретный объект какого-то класса в программировании называется экземпляр класса."
                    },
                    // PHP
                    new Lesson
                    {
                        Id = 31,
                        CourseId = 6,
                        Title = "Переменные",
                        Text = "По умолчанию переменные присваиваются по значению. То есть, когда переменной присваивают выражение, значение оригинального выражения копируется в эту переменную. Это означает, например, что после присваивания одной переменной значения другой, изменение одной из переменных не влияет на другую. Дополнительную информацию об этом способе присваивания смотрите в разделе «Выражения».\r\n\r\nPHP также предлагает другой способ присваивания значений переменным: присваивание по ссылке. Это означает, что новая переменная просто ссылается (иначе говоря, «становится псевдонимом» или «указывает») на оригинальную переменную. Изменения в новой переменной отражаются на оригинале, и наоборот.\r\n\r\nДля присваивания по ссылке просто добавьте амперсанд & к началу имени присваиваемой (исходной) переменной. Например, следующий фрагмент кода дважды выводит «Меня зовут Боб»:"
                    },
                    new Lesson
                    {
                        Id = 32,
                        CourseId = 6,
                        Title = "Математические операции",
                        Text = "Предположим, что переменная A содержит 10, а переменная B содержит 20. Тогда приведенные ниже арифметические операторы выполняют следующие операции:\r\n\r\nоператор сложения (+) складывает два операнда (A + B; результат: 30);\r\nоператор вычитания (-) вычитает второй операнд из первого (A-B; результат: -10);\r\nоператор умножения (*) умножает один операнд на другой (A * B; результат: 200);\r\nоператор деления (/) делит делимое на делитель (B / A; результат: 2);\r\nоператор модуля (%) выводит остаток после целочисленного деления (B % A; результат: 0);\r\nоператор инкремента (++) увеличивает целочисленное значение на единицу (A++; результат: 11);\r\nоператор декремента (- -) уменьшает целочисленное значение на единицу (A- -; результат: 9)."
                    },
                    new Lesson
                    {
                        Id = 33,
                        CourseId = 6,
                        Title = "Логические операции",
                        Text = "Операции сравнения, как правило, применяются в условных конструкциях, когда надо сравнивать два значения, и в зависимости от результата сравнения выполнить некоторые действия. Имеются следующие операции сравнения.\r\n\r\n==\r\n\r\nОператор равенства сравнивает два значения, и если они равны, возвращает true, иначе возвращает false: $a == 5\r\n===\r\n\r\nОператор тождественности также сравнивает два значения, и если они равны, возвращает true, иначе возвращает false: $a === 5\r\n!=\r\n\r\nСравнивает два значения, и если они не равны, возвращает true, иначе возвращает false: $a != 5\r\n!==\r\n\r\nСравнивает два значения, и если они не равны, возвращает true, иначе возвращает false: $a !== 5\r\n>\r\n\r\nСравнивает два значения, и если первое больше второго, то возвращает true, иначе возвращает false: $a > 5\r\n<\r\n\r\nСравнивает два значения, и если первое меньше второго, то возвращает true, иначе возвращает false: $a < 5\r\n>=\r\n\r\nСравнивает два значения, и если первое больше или равно второму, то возвращает true, иначе возвращает false: $a >= 5\r\n<=\r\n\r\nСравнивает два значения, и если первое меньше или равно второму, то возвращает true, иначе возвращает false: $a <= 5"
                    },
                    new Lesson
                    {
                        Id = 34,
                        CourseId = 6,
                        Title = "Массивы",
                        Text = "Массив в PHP — это упорядоченная структура данных, которая связывает значения и ключи. Этот тип данных оптимизирован для разных целей, поэтому с ним работают как с массивом, списком (вектором), хеш-таблицей (реализацией карты), словарём, коллекцией, стеком, очередью и, возможно, чем-то ещё. Поскольку значениями массива бывают другие массивы, также доступны деревья и многомерные массивы.\r\n\r\nОбъяснение этих структур данных выходит за рамки этого руководства, но как минимум один пример будет приведён для каждой из них. За дополнительной информацией обращаются к большому объему литературы по этой обширной теме."
                    },
                    new Lesson
                    {
                        Id = 35,
                        CourseId = 6,
                        Title = "Функции",
                        Text = "Функция в PHP — это автономный блок кода, который выполняет определённую задачу.\r\n\r\nВ PHP есть множество встроенных функций, которые можно вызывать непосредственно в скриптах для выполнения конкретной задачи. Например, gettype(), print_r(), var_dump и т. д.\r\n\r\nТакже PHP позволяет определять свои собственные функции. Это способ создания повторно используемых пакетов кода, которые выполняют определённые задачи и могут храниться и поддерживаться отдельно от основной программы.\r\n\r\nПреимущества использования функций:\r\n\r\nСокращают повторение кода в программе.\r\n\r\nУпрощают обслуживание кода.\r\n\r\nУпрощают устранение ошибок.\r\n\r\nМогут быть повторно использованы в другом приложении."
                    },
                    new Lesson
                    {
                        Id = 36,
                        CourseId = 6,
                        Title = "Объекты",
                        Text = "При создании программы на PHP и отдельных ее блоков нам вполне может хватить той функциональности, которую представляют функции. Однако PHP имеет и другие возможности по созданию программ, которые представляет объектно-ориентированное программирование. В ряде случаев программы, использующие ООП, проще в понимании, их легче поддерживать и изменять.\r\n\r\nКлючевыми понятиями парадигмы ООП являются понятия \"класс\" и \"объект\". Описанием объекта является класс, а объект представляет экземпляр этого класса. Можно провести следующую аналогию: например, у каждого человека есть имя, определенный возраст, вес, какие-то другие параметры. То есть некоторый шаблон, который содержит набор параметров человека - этот шаблон можно назвать классом. А реально же существующий человек с конкретным именем, возрастом, весом и т.д. является объектом или экземпляром этого класса."
                    }
                );

            modelBuilder.Entity<Test>()
                .HasData(
                    // C++
                    new Test
                    {
                        Id = 1,
                        CourseId = 1,
                        Question = "Класс - это",
                        Answer1 = "любой тип данных, определяемый пользователем",
                        Answer2 = "тип данных, определяемый пользователем и сочетающий в себе данные и функции их обработки",
                        Answer3 = "структура, для которой в программе имеются функции работы с нею",
                        Answer4 = "нет правильного ответа",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 2,
                        CourseId = 1,
                        Question = "Членами класса могут быть",
                        Answer1 = "только переменные, объявленные как private",
                        Answer2 = "только функции, объявленные как private",
                        Answer3 = "только переменные и функции, объявленные как private",
                        Answer4 = "как переменные, так и функции, могут быть объявлены как private и как public",
                        CorrectAnswer = 4,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 3,
                        CourseId = 1,
                        Question = "Что называется конструктором?",
                        Answer1 = "метод, имя которого совпадает с именем класса и который вызывается автоматически при объявлении класса (до создания объекта класса)",
                        Answer2 = "метод, имя которого необязательно совпадает с именем класса и который вызывается при создании объекта класса",
                        Answer3 = "метод, имя которого совпадает с именем класса и который вызывается автоматически при создании объекта класса",
                        Answer4 = "метод, имя которого совпадает с именем класса и который необходимо явно вызывать из головной программы при объявлении объекта класса",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 4,
                        CourseId = 1,
                        Question = "Объект - это",
                        Answer1 = "переменная, содержащая указатель на класс",
                        Answer2 = "экземпляр класса",
                        Answer3 = "класс, который содержит в себе данные и методы их обработки",
                        Answer4 = "нет правильного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 5,
                        CourseId = 1,
                        Question = "Что называется деструктором",
                        Answer1 = "метод, который уничтожает объект",
                        Answer2 = "метод, который удаляет объект",
                        Answer3 = "метод, который освобождает память, занимаемую объектом",
                        Answer4 = "системная функция, которая освобождает память, занимаемую объектом",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 6,
                        CourseId = 1,
                        Question = "Что называется наследованием?",
                        Answer1 = "это механизм, посредством которого производный класс получает элементы родительского и может дополнять либо изменять их свойства и методы",
                        Answer2 = "это механизм переопределения методов базового класса",
                        Answer3 = "это механизм, посредством которого производный класс получает все поля базового класса",
                        Answer4 = "это механизм, посредством которого производный класс получает элементы родительского, может их дополнить, но не может переопределить",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 7,
                        CourseId = 1,
                        Question = "Выберите правильное объявление производного класса",
                        Answer1 = "class MoreDetails:: Details;",
                        Answer2 = "class MoreDetails: public class Details;",
                        Answer3 = "class MoreDetails: public Details;",
                        Answer4 = "class MoreDetails: class(Details);",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 8,
                        CourseId = 1,
                        Question = "Возможность и способ обращения производного класса к элементам базового определяется",
                        Answer1 = "ключами доступа: private, public, protected в теле производного класса",
                        Answer2 = "только ключом доступа protected в заголовке объявления производного класса",
                        Answer3 = "ключами доступа: private, public, protected в заголовке объявления производного класса",
                        Answer4 = "ключами доступа: private, public, protected в теле базового класса",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 9,
                        CourseId = 1,
                        Question = "Дружественная функция - это",
                        Answer1 = "функция другого класса, среди аргументов которой есть элементы данного класса",
                        Answer2 = "функция, объявленная в классе с атрибутом friend, но не являющаяся членом класса;",
                        Answer3 = "функция, являющаяся членом класса и объявленная с атрибутом friend;",
                        Answer4 = "функция, которая в другом классе объявлена как дружественная данному",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 10,
                        CourseId = 1,
                        Question = "Шаблон функции - это...",
                        Answer1 = "определение функции, в которой типу обрабатываемых данных присвоено условное обозначение",
                        Answer2 = "прототип функции, в котором вместо имен параметров указан условный тип",
                        Answer3 = "определение функции, в котором указаны возможные варианты типов обрабатываемых параметров",
                        Answer4 = "определение функции, в котором в прототипе указан условный тип, а в определении указаны варианты типов обрабатываемых параметров",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 11,
                        CourseId = 1,
                        Question = "Переопределение операций имеет вид:",
                        Answer1 = "имя_класса, ключевое слово operation, символ операции",
                        Answer2 = "имя_класса, ключевое слово operator, символ операции, в круглых скобках могут быть указаны аргументы",
                        Answer3 = "имя_класса, ключевое слово operator, список аргументов",
                        Answer4 = "имя_класса, два двоеточия, ключевое слово operator, символ операции",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 12,
                        CourseId = 1,
                        Question = "Для доступа к элементам объекта используются:",
                        Answer1 = "при обращении через имя объекта – точка, при обращении через указатель – операция «->»",
                        Answer2 = "при обращении через имя объекта – два двоеточия, при обращении через указатель – операция «точка»",
                        Answer3 = "при обращении через имя объекта – точка, при обращении через указатель – два двоеточия",
                        Answer4 = "при обращении через имя объекта – два двоеточия, при обращении через указатель – операция «->»",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 13,
                        CourseId = 1,
                        Question = "Полиморфизм – это :",
                        Answer1 = "средство, позволяющее в одном классе использовать методы с одинаковыми именами;",
                        Answer2 = "средство, позволяющее в одном классе использовать методы с разными именами для выполнения одинаковых действий\r\n\r\n",
                        Answer3 = "средство, позволяющее перегружать функции для работы с разными типами или разным количеством аргументов",
                        Answer4 = "средство, позволяющее использовать одно имя для обозначения действий, общих для родственных классов",
                        CorrectAnswer = 4,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 14,
                        CourseId = 1,
                        Question = "Полиморфизм реализован через механизмы:",
                        Answer1 = "перегрузки функций, наследования методов, шаблонов;",
                        Answer2 = "наследования методов, виртуальных функций, шаблонов",
                        Answer3 = "перегрузки функций, виртуальных функций, шаблонов",
                        Answer4 = "перегрузки функций, наследования, виртуальных функций.",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 15,
                        CourseId = 1,
                        Question = "Виртуальными называются функции:",
                        Answer1 = "функции базового класса, которые могут быть переопределены в производном классе",
                        Answer2 = "функции базового класса, которые не используются в производном классе;",
                        Answer3 = "функции базового класса, которые не могут быть переопределены в базовом классе;",
                        Answer4 = "функции производного класса, переопределенные относительно базового класса",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 16,
                        CourseId = 1,
                        Question = "Полиморфизм в объектно-ориентированном программировании реализуется:",
                        Answer1 = "через механизмы перегрузки (функций и операций) и шаблоны;",
                        Answer2 = "через механизмы перегрузки (функций и операций), виртуальные функции и шаблоны",
                        Answer3 = "через виртуальные функции и шаблоны;",
                        Answer4 = "через механизмы перегрузки (функций и операций) и виртуальные функции",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 17,
                        CourseId = 1,
                        Question = "Для чего предназначен оператор namespace:",
                        Answer1 = "для использования классов, переменных и функций из других модулей программы без использования заголовочных файлов",
                        Answer2 = "для заключения в группу объявлений классов, переменных и функций в отдельный контекст со своим именем",
                        Answer3 = "для заключения в группу объявлений классов, переменных и функций для использования только в текущем модуле",
                        Answer4 = "нет правильного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 18,
                        CourseId = 1,
                        Question = "Какой из компонентов может входить в интегрированную среду программирования:",
                        Answer1 = "наладчик",
                        Answer2 = "доводчик",
                        Answer3 = "отладчик",
                        Answer4 = "все вышеперечисленные",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 19,
                        CourseId = 1,
                        Question = "Какой из наборов перечисляемых значений записан правильно:",
                        Answer1 = "enum { a, b = 3, c = 4, 3 };",
                        Answer2 = "enum { a, b, 3, 4 };",
                        Answer3 = "enum {a, b = 3, c, d }; +",
                        Answer4 = "все вышеперечисленные",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 20,
                        CourseId = 1,
                        Question = "В чем различие использования следующих выражений #include <…> и #include «…»:",
                        Answer1 = "различие заключается в методе поиска препроцессором включаемого файла",
                        Answer2 = "в различии использования заголовочных и исходных файлов",
                        Answer3 = "нет различий",
                        Answer4 = "оба варианты верны",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    // C#
                    new Test
                    {
                        Id = 21,
                        CourseId = 2,
                        Question = "Что такое Куча:",
                        Answer1 = "Область динамической памяти",
                        Answer2 = "Именованная область памяти",
                        Answer3 = "Куча переменных",
                        Answer4 = "Нет правильного ответа",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 22,
                        CourseId = 2,
                        Question = "Какие циклы существуют в языке C#:",
                        Answer1 = "for, while",
                        Answer2 = "for, while, do while, foreach",
                        Answer3 = "for, while, do while",
                        Answer4 = "Нет правильного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 23,
                        CourseId = 2,
                        Question = "Что обозначает ключевое слово var:",
                        Answer1 = "Устраивает «войну» между программами",
                        Answer2 = "Обозначает что переменная имеет явный тип данных",
                        Answer3 = "Обозначает что переменная без явного типа данных",
                        Answer4 = "Нет правильного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 24,
                        CourseId = 2,
                        Question = "Какие типы переменных существуют:",
                        Answer1 = "int, char, bool, float, double",
                        Answer2 = "int, char, bool, string",
                        Answer3 = "Оба варианта верны",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 25,
                        CourseId = 2,
                        Question = "Что такое константа:",
                        Answer1 = "Глобальная переменная",
                        Answer2 = "Переменная которая может быть изменена в любое время",
                        Answer3 = "Переменная значение которой нельзя изменить",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 26,
                        CourseId = 2,
                        Question = "Где правильно создана переменная:",
                        Answer1 = "$x = 10;",
                        Answer2 = "char symbol = ‘A’;",
                        Answer3 = "x = 0;",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 27,
                        CourseId = 2,
                        Question = "Какой оператор возвращает значение из метода:",
                        Answer1 = "end",
                        Answer2 = "out",
                        Answer3 = "return",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 28,
                        CourseId = 2,
                        Question = "В чем отличие между break и continue:",
                        Answer1 = "Continue пропускает итерацию, break выходит из цикла",
                        Answer2 = "Break используется в Switch case, а continue в циклах",
                        Answer3 = "Continue работает только в циклах, break дополнительно в методах",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 29,
                        CourseId = 2,
                        Question = "Какие бывают циклы:",
                        Answer1 = "Цикл, Форич, Двойной цикл, Многократный",
                        Answer2 = "Большие и маленькие",
                        Answer3 = "for, while, do-while, foreach",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 30,
                        CourseId = 2,
                        Question = "Что делает try-catch:",
                        Answer1 = "Работает с файлами",
                        Answer2 = "Работает с исключениями",
                        Answer3 = "Работает с классами",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 31,
                        CourseId = 2,
                        Question = "Что такое цикл и для чего они нужны:",
                        Answer1 = "Циклы нужны для многократного выполнения кода",
                        Answer2 = "Циклы нужны для многократного запуска программы",
                        Answer3 = "Циклы нужны для многократного размещения данных",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 32,
                        CourseId = 2,
                        Question = "Для чего можно использовать язык C#:",
                        Answer1 = "Для создания веб сайтов",
                        Answer2 = "Для создания программ под ПК",
                        Answer3 = "Оба варианта верны",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 33,
                        CourseId = 2,
                        Question = "Какие бывают массивы:",
                        Answer1 = "Одномерные и многомерные",
                        Answer2 = "Резиновые и статичные",
                        Answer3 = "Сложные и простые",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 34,
                        CourseId = 2,
                        Question = "Какой тип переменной используется в коде: int a = 5:",
                        Answer1 = "Знаковое 64-бит целое",
                        Answer2 = "Знаковое 8-бит целое",
                        Answer3 = "Знаковое 32-бит целое",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 35,
                        CourseId = 2,
                        Question = "Что такое массив:",
                        Answer1 = "Набор однотипных данных, которые располагаются в памяти последовательно друг за другом",
                        Answer2 = "Набор данных типа int (32-бит целое)",
                        Answer3 = "Набор текстовых значений в формате Unicode, которые расположены в случайном порядке",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 1,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 36,
                        CourseId = 2,
                        Question = "Что делает оператор «%»:",
                        Answer1 = "Возвращает процент от суммы",
                        Answer2 = "Возвращает остаток от деления",
                        Answer3 = "Возвращает тригонометрическую функцию",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 37,
                        CourseId = 2,
                        Question = "Как называется оператор «?:»:",
                        Answer1 = "Прямой оператор",
                        Answer2 = "Вопросительный",
                        Answer3 = "Тернарный оператор",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 38,
                        CourseId = 2,
                        Question = "Что сделает программа выполнив следующий код: Console.WriteLine(«Hello, World!»);",
                        Answer1 = "Напишет Hello, World!",
                        Answer2 = "Напишет на новой строчке Hello, World!",
                        Answer3 = "Удалит все значения с Hello, World!",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 39,
                        CourseId = 2,
                        Question = "Для чего нужны условные операторы:",
                        Answer1 = "Чтобы устанавливать условия пользователю",
                        Answer2 = "Для оптимизации программы",
                        Answer3 = "Для ветвления программы",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 3,
                        Points = 20
                    },
                    new Test
                    {
                        Id = 40,
                        CourseId = 2,
                        Question = "Как сделать инкрементацию числа:",
                        Answer1 = "!=",
                        Answer2 = "++",
                        Answer3 = "—-",
                        Answer4 = "Нет верного ответа",
                        CorrectAnswer = 2,
                        Points = 20
                    },
                    // Java
                    new Test
                    {
                        Id = 41,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 42,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 43,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 44,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 45,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 46,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 47,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 48,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 49,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 50,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 51,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 52,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 53,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 54,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 55,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 56,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 57,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 58,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 59,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 60,
                        CourseId = 3,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    // Python
                    new Test
                    {
                        Id = 61,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 62,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 63,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 64,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 65,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 66,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 67,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 68,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 69,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 70,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 71,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 72,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 73,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 74,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 75,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 76,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 77,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 78,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 79,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 80,
                        CourseId = 4,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    // Ruby
                    new Test
                    {
                        Id = 81,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 82,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 83,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 84,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 85,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 86,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 87,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 88,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 89,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 90,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 91,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 92,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 93,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 94,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 95,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 96,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 97,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 98,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 99,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 100,
                        CourseId = 5,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    // PHP
                    new Test
                    {
                        Id = 101,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 102,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 103,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 104,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 105,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 106,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 107,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 108,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 109,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 110,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 111,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 112,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 113,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 114,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 115,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 116,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 117,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 118,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 119,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    },
                    new Test
                    {
                        Id = 120,
                        CourseId = 6,
                        Question = "",
                        Answer1 = "",
                        Answer2 = "",
                        Answer3 = "",
                        Answer4 = "",
                        CorrectAnswer = 0,
                        Points = 0
                    }
                );

            modelBuilder.Entity<Doc>()
                .HasData(
                    // C++
                    new Doc
                    {
                        Id = 1,
                        CourseId = 1,
                        LessonId = 1,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 2,
                        CourseId = 1,
                        LessonId = 2,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 3,
                        CourseId = 1,
                        LessonId = 3,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 4,
                        CourseId = 1,
                        LessonId = 4,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 5,
                        CourseId = 1,
                        LessonId = 5,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 6,
                        CourseId = 1,
                        LessonId = 6,
                        DocName = ""
                    },
                    // C#
                    new Doc
                    {
                        Id = 7,
                        CourseId = 2,
                        LessonId = 7,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 8,
                        CourseId = 2,
                        LessonId = 8,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 9,
                        CourseId = 2,
                        LessonId = 9,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 10,
                        CourseId = 2,
                        LessonId = 10,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 11,
                        CourseId = 2,
                        LessonId = 11,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 12,
                        CourseId = 2,
                        LessonId = 12,
                        DocName = ""
                    },
                    // Java
                    new Doc
                    {
                        Id = 13,
                        CourseId = 3,
                        LessonId = 13,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 14,
                        CourseId = 3,
                        LessonId = 14,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 15,
                        CourseId = 3,
                        LessonId = 15,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 16,
                        CourseId = 3,
                        LessonId = 16,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 17,
                        CourseId = 3,
                        LessonId = 17,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 18,
                        CourseId = 3,
                        LessonId = 18,
                        DocName = ""
                    },
                    // Python
                    new Doc
                    {
                        Id = 19,
                        CourseId = 4,
                        LessonId = 19,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 20,
                        CourseId = 4,
                        LessonId = 20,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 21,
                        CourseId = 4,
                        LessonId = 21,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 22,
                        CourseId = 4,
                        LessonId = 22,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 23,
                        CourseId = 4,
                        LessonId = 23,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 24,
                        CourseId = 4,
                        LessonId = 24,
                        DocName = ""
                    },
                    // Ruby
                    new Doc
                    {
                        Id = 25,
                        CourseId = 5,
                        LessonId = 25,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 26,
                        CourseId = 5,
                        LessonId = 26,
                        DocName = ""
                    }, 
                    new Doc
                    {
                        Id = 27,
                        CourseId = 5,
                        LessonId = 27,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 28,
                        CourseId = 5,
                        LessonId = 28,
                        DocName = ""
                    }, 
                    new Doc
                    {
                        Id = 29,
                        CourseId = 5,
                        LessonId = 29,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 30,
                        CourseId = 5,
                        LessonId = 30,
                        DocName = ""
                    },
                    // PHP
                    new Doc
                    {
                        Id = 31,
                        CourseId = 6,
                        LessonId = 31,
                        DocName = ""
                    }, 
                    new Doc
                    {
                        Id = 32,
                        CourseId = 6,
                        LessonId = 32,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 33,
                        CourseId = 6,
                        LessonId = 33,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 34,
                        CourseId = 6,
                        LessonId = 34,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 35,
                        CourseId = 6,
                        LessonId = 35,
                        DocName = ""
                    },
                    new Doc
                    {
                        Id = 36,
                        CourseId = 6,
                        LessonId = 36,
                        DocName = ""
                    }
                );

            modelBuilder.Entity<Video>()
                .HasData(
                    // C++
                    new Video
                    {
                        Id = 1,
                        CourseId = 1,
                        LessonId = 1,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 2,
                        CourseId = 1,
                        LessonId = 2,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 3,
                        CourseId = 1,
                        LessonId = 3,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 4,
                        CourseId = 1,
                        LessonId = 4,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 5,
                        CourseId = 1,
                        LessonId = 5,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 6,
                        CourseId = 1,
                        LessonId = 6,
                        VideoName = ""
                    },
                    // C#
                    new Video
                    {
                        Id = 7,
                        CourseId = 2,
                        LessonId = 7,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 8,
                        CourseId = 2,
                        LessonId = 8,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 9,
                        CourseId = 2,
                        LessonId = 9,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 10,
                        CourseId = 2,
                        LessonId = 10,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 11,
                        CourseId = 2,
                        LessonId = 11,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 12,
                        CourseId = 2,
                        LessonId = 12,
                        VideoName = ""
                    },
                    // Java
                    new Video
                    {
                        Id = 13,
                        CourseId = 3,
                        LessonId = 13,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 14,
                        CourseId = 3,
                        LessonId = 14,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 15,
                        CourseId = 3,
                        LessonId = 15,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 16,
                        CourseId = 3,
                        LessonId = 16,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 17,
                        CourseId = 3,
                        LessonId = 17,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 18,
                        CourseId = 3,
                        LessonId = 18,
                        VideoName = ""
                    },
                    // Python
                    new Video
                    {
                        Id = 19,
                        CourseId = 4,
                        LessonId = 19,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 20,
                        CourseId = 4,
                        LessonId = 20,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 21,
                        CourseId = 4,
                        LessonId = 21,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 22,
                        CourseId = 4,
                        LessonId = 22,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 23,
                        CourseId = 4,
                        LessonId = 23,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 24,
                        CourseId = 4,
                        LessonId = 24,
                        VideoName = ""
                    },
                    // Ruby
                    new Video
                    {
                        Id = 25,
                        CourseId = 5,
                        LessonId = 25,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 26,
                        CourseId = 5,
                        LessonId = 26,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 27,
                        CourseId = 5,
                        LessonId = 27,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 28,
                        CourseId = 5,
                        LessonId = 28,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 29,
                        CourseId = 5,
                        LessonId = 29,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 30,
                        CourseId = 5,
                        LessonId = 30,
                        VideoName = ""
                    },
                    // PHP
                    new Video
                    {
                        Id = 31,
                        CourseId = 6,
                        LessonId = 31,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 32,
                        CourseId = 6,
                        LessonId = 32,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 33,
                        CourseId = 6,
                        LessonId = 33,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 34,
                        CourseId = 6,
                        LessonId = 34,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 35,
                        CourseId = 6,
                        LessonId = 35,
                        VideoName = ""
                    },
                    new Video
                    {
                        Id = 36,
                        CourseId = 6,
                        LessonId = 36,
                        VideoName = ""
                    }
                );

            modelBuilder.Entity<Homework>()
                .HasData(
                    // C++
                    new Homework
                    {
                        Id = 1,
                        CourseId = 1,
                        LessonId = 1,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 2,
                        CourseId = 1,
                        LessonId = 2,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 3,
                        CourseId = 1,
                        LessonId = 3,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 4,
                        CourseId = 1,
                        LessonId = 4,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 5,
                        CourseId = 1,
                        LessonId = 5,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 6,
                        CourseId = 1,
                        LessonId = 6,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    // C#
                    new Homework
                    {
                        Id = 7,
                        CourseId = 2,
                        LessonId = 7,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 8,
                        CourseId = 2,
                        LessonId = 8,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 9,
                        CourseId = 2,
                        LessonId = 9,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 10,
                        CourseId = 2,
                        LessonId = 10,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 11,
                        CourseId = 2,
                        LessonId = 11,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 12,
                        CourseId = 2,
                        LessonId = 12,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    // Java
                    new Homework
                    {
                        Id = 13,
                        CourseId = 3,
                        LessonId = 13,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 14,
                        CourseId = 3,
                        LessonId = 14,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 15,
                        CourseId = 3,
                        LessonId = 15,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 16,
                        CourseId = 3,
                        LessonId = 16,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 17,
                        CourseId = 3,
                        LessonId = 17,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 18,
                        CourseId = 3,
                        LessonId = 18,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    // Python
                    new Homework
                    {
                        Id = 19,
                        CourseId = 4,
                        LessonId = 19,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 20,
                        CourseId = 4,
                        LessonId = 20,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 21,
                        CourseId = 4,
                        LessonId = 21,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 22,
                        CourseId = 4,
                        LessonId = 22,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 23,
                        CourseId = 4,
                        LessonId = 23,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 24,
                        CourseId = 4,
                        LessonId = 24,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    // Ruby
                    new Homework
                    {
                        Id = 25,
                        CourseId = 5,
                        LessonId = 25,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 26,
                        CourseId = 5,
                        LessonId = 26,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 27,
                        CourseId = 5,
                        LessonId = 27,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 28,
                        CourseId = 5,
                        LessonId = 28,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 29,
                        CourseId = 5,
                        LessonId = 29,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 30,
                        CourseId = 5,
                        LessonId = 30,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    // PHP
                    new Homework
                    {
                        Id = 31,
                        CourseId = 6,
                        LessonId = 31,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 32,
                        CourseId = 6,
                        LessonId = 32,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 33,
                        CourseId = 6,
                        LessonId = 33,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 34,
                        CourseId = 6,
                        LessonId = 34,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 35,
                        CourseId = 6,
                        LessonId = 35,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    },
                    new Homework
                    {
                        Id = 36,
                        CourseId = 6,
                        LessonId = 36,
                        Title = "Домашнее задание",
                        Content = "",
                        Deadline = new DateOnly(2024, 6, 15)
                    }
                );

        }
    }
}
